package com.mycompany.flightsystem;


import java.util.Scanner;

public class FlightBookingApp {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        UserManager userManager = new UserManager();
        FlightManager flightManager = new FlightManager();

        while (true) {
            System.out.println("1. Login");
            System.out.println("2. Create Account");
            System.out.println("3. Exit");
            System.out.print("Enter choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); 

            switch (choice) {
                case 1 -> loginUser(scanner, userManager, flightManager);
                case 2 -> createUser(scanner, userManager);
                case 3 -> {
                    System.out.println("Exiting...");
                    scanner.close();
                    return;
                }
                default -> System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void loginUser(Scanner scanner, UserManager userManager, FlightManager flightManager) {
        System.out.print("Enter username: ");
        String username = scanner.nextLine();

        System.out.print("Enter password: ");
        String password = scanner.nextLine(); 

        User user = userManager.getUser(username, password);

        if (user != null) {
            System.out.println("Login successful!");
            mainMenu(scanner, user, flightManager, userManager);
        } else {
            System.out.println("User not found or incorrect password. Please try again.");
        }
    }

    private static void createUser(Scanner scanner, UserManager userManager) {
        System.out.print("Enter a username: ");
        String username = scanner.nextLine();

        System.out.print("Enter a password: ");
        String password = scanner.nextLine(); 

        if (userManager.createUser(username, password)) {
            System.out.println("Account created successfully!");
        } else {
            System.out.println("Username already exists.");
        }
    }

    private static void mainMenu(Scanner scanner, User user, FlightManager flightManager, UserManager userManager) {
        while (true) {
            System.out.println("Main Menu:");
            System.out.println("1. Book a Flight");
            System.out.println("2. View Bookings");
            System.out.println("3. Logout");
            System.out.print("Enter choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); 

            switch (choice) {
                case 1 -> bookFlight(scanner, user, flightManager, userManager);
                case 2 -> viewBookings(user);
                case 3 -> {
                    System.out.println("Logging out...");
                    return;
                }
                default -> System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void bookFlight(Scanner scanner, User user, FlightManager flightManager, UserManager userManager) {
        System.out.println("Available Destinations: ");
        System.out.println("1. Chittagong");
        System.out.println("2. Rajshahi");
        System.out.println("3. Khulna");
        System.out.println("4. Shylet");
        System.out.println("5. Barishal");
        System.out.print("Enter destination: ");
        int destinationChoice = scanner.nextInt();
        scanner.nextLine(); 
        String destination = flightManager.destinations[destinationChoice - 1];

        System.out.println("Available Dates: ");
        System.out.println("1. 01/01/2025");
        System.out.println("2. 08/01/2025");
        System.out.println("3. 20/01/2025");
        System.out.println("4. 02/02/2025");
        System.out.println("5. 10/02/2025");
        System.out.print("Enter date: ");
        int dateChoice = scanner.nextInt();
        scanner.nextLine(); 
        String date = flightManager.dates[dateChoice - 1];

        System.out.println("Available Times: ");
        System.out.println("1. 8am");
        System.out.println("2. 2pm");
        System.out.println("3. 8pm");
        System.out.print("Enter time: ");
        int timeChoice = scanner.nextInt();
        scanner.nextLine(); 
        String time = flightManager.times[timeChoice - 1];

        new Thread(() -> {
            synchronized (flightManager) {
                boolean booked = flightManager.bookFlight(destination, time, date);
                if (booked) {
                    Booking booking = new Booking(destination, date, time);
                    user.addBooking(booking);

                    userManager.saveUser(user);  
                    System.out.println("Booking confirmed for " + destination + " on " + date + " at " + time);
                }
            }
        }).start();
    }

    private static void viewBookings(User user) {
        int bookingCount = user.getBookingCount();  

    if (bookingCount == 0) {
        System.out.println("You have no bookings yet.");
    } else {
        System.out.println("Your bookings: ");
        for (int i = 0; i < bookingCount; i++) {
            Booking booking = user.getBookings()[i];  
            if (booking != null) {
                System.out.println(booking); 
            }
        }
    }
    }
}
