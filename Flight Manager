package com.mycompany.flightsystem;


public class FlightManager {
    private static final int MAX_SEATS = 10;  
    private int[][][] seats;  

    String[] destinations = {"Chittagong", "Rajshahi", "Khulna", "Shylet", "Barishal"};
    String[] times = {"8am", "2pm", "8pm"};
    String[] dates = {"01/01/2025", "08/01/2025", "20/01/2025", "02/02/2025", "10/02/2025"};

    public FlightManager() {
        seats = new int[destinations.length][times.length][dates.length];
        initializeSeats();
    }

    private void initializeSeats() {
        for (int i = 0; i < destinations.length; i++) {
            for (int j = 0; j < times.length; j++) {
                for (int k = 0; k < dates.length; k++) {
                    seats[i][j][k] = MAX_SEATS;
                }
            }
        }
    }

    public synchronized boolean bookFlight(String destination, String time, String date) {
        int destinationIndex = getDestinationIndex(destination);
        int timeIndex = getTimeIndex(time);
        int dateIndex = getDateIndex(date);

        if (destinationIndex == -1 || timeIndex == -1 || dateIndex == -1) {
            System.out.println("Invalid destination, time, or date.");
            return false;
        }

        if (seats[destinationIndex][timeIndex][dateIndex] > 0) {
            seats[destinationIndex][timeIndex][dateIndex]--;  
            System.out.println("Booking successful for " + destination + " at " + time + " on " + date);
            return true;
        } else {
            System.out.println("No seats available for " + destination + " at " + time + " on " + date);
            return false;
        }
    }

    private int getDestinationIndex(String destination) {
        for (int i = 0; i < destinations.length; i++) {
            if (destinations[i].equalsIgnoreCase(destination)) {
                return i;
            }
        }
        return -1; 
    }

    private int getTimeIndex(String time) {
        for (int i = 0; i < times.length; i++) {
            if (times[i].equalsIgnoreCase(time)) {
                return i;
            }
        }
        return -1; 
    }

    private int getDateIndex(String date) {
        for (int i = 0; i < dates.length; i++) {
            if (dates[i].equalsIgnoreCase(date)) {
                return i;
            }
        }
        return -1;  
    }
}
